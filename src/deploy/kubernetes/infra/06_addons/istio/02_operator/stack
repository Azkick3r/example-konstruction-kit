#!/bin/bash
COMMAND=$1
PROFILE=$2

[ ! -f "/usr/local/bin/istioctl" ] && echo "istioctl not found in /usr/local/bin, cannot continue" && exit

kubectl version | grep "Server Version" | grep "linux/arm64" > /dev/null && _Values_server_arch="-arm64v8"
_Values_host_name=`kubectl get configmaps cluster-config -o jsonpath='{.data.hostname}' -n default` && [ -z "$_Values_host_name" ] && echo "Hostname is empty" && exit


function init() {
    [ "${_Values_server_arch}" = "-arm64v8" ] && _Values_hub="--hub=docker.io/querycapistio" && echo "arm64 detected"
    istioctl operator init ${Values_hub} --tag=1.10.2
    #--set values.global.tracer.zipkin.address=zipkin.monitoring:9411
    kubectl apply -f ./templates/operator${_Values_server_arch}.yml
}

function prune() {
    istioctl manifest generate --set profile=minimal | kubectl delete --ignore-not-found=true -f -
    istioctl operator remove --force
#    kubectl delete namespace istio-operator
#    kubectl delete namespace istio-system
}

if   [ "${COMMAND}" = "init" ] ; then init;
elif [ "${COMMAND}" = "prune" ]; then prune;

else echo Doing nothing !; fi