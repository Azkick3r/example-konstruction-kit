#!/bin/bash
source .values
COMMAND=$1
PROFILE=$2

kubectl version | grep "Server Version" | grep "linux/arm64" > /dev/null && _Values_server_arch="-arm64v8"
_Values_host_name=`kubectl get configmaps cluster-config -o jsonpath='{.data.hostname}' -n default` && [ -z "$_Values_host_name" ] && echo "Hostname is empty" && exit

function dynKubectl() {
for filename in $2/*.yml; do
eval "cat <<EOF
$(<$filename)
EOF
" | kubectl $1 -f -
done
}


function up() {
    #https://andrewlock.net/running-kubernetes-and-the-dashboard-with-docker-desktop/

    kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.2.0/aio/deploy/recommended.yaml
    kubectl patch deployment kubernetes-dashboard -n kubernetes-dashboard --type 'json' -p '[{"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--enable-skip-login"}]'

#    kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.4.2/components.yaml
#    kubectl patch deployment metrics-server -n kube-system --type 'json' -p '[{"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--kubelet-insecure-tls"}]'

    dynKubectl apply ./templates
}

function down() {
    kubectl delete -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.4.2/components.yaml
    kubectl delete -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.2.0/aio/deploy/recommended.yaml
    dynKubectl "delete --ignore-not-found" ./templates
}


if   [ "${COMMAND}" = "init" ] ; then up;
elif [ "${COMMAND}" = "restart" ] ; then down && up;
elif [ "${COMMAND}" = "prune" ]; then down;

else echo Doing nothing !; fi