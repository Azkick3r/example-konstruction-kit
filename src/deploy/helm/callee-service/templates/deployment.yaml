apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "application.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ include "application.name" . }}
    helm.sh/chart: {{ include "application.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "application.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/actuator/prometheus"
      labels:
        app.kubernetes.io/name: {{ include "application.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        version: v1
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}{{ .Values.image.arch }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP

          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-config
            - configMapRef:
                name: {{ .Release.Name }}-config-log
            - secretRef:
                name: {{ .Release.Name }}-config-external

          args: ["-Xmx{{ .Values.resources.requests.memory }}"]
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"

          readinessProbe:
            httpGet:
              path: /actuator/health
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3

          volumeMounts:
            - mountPath: /usr/share/logs
              name: {{ .Release.Name }}-applogs

      volumes:
        - name: {{ .Release.Name }}-applogs
          emptyDir: {}
