apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "application.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "application.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "application.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "application.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        version: v1
    spec:
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
        {{- end }}

      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: tcp
              containerPort: {{ .Values.service.port }}
              protocol: TCP

          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-config
            - secretRef:
                name: {{ .Release.Name }}-config-external

          args: ["postgres",
                 "-c", "shared_preload_libraries=pg_stat_statements",
                 "-c", "shared_buffers={{ .Values.resources.requests.memory }}B",
                 "-c", "max_connections={{ .Values.postgres.maxConnections }}"]
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              cpu: "{{ .Values.resources.limits.cpu }}"

          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: {{ .Release.Name }}-pvc-volume

            - mountPath: /docker-entrypoint-initdb.d/
              name: {{ .Release.Name }}-initdb-volume

      volumes:
        - name: {{ .Release.Name }}-pvc-volume
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc

        - name: {{ .Release.Name }}-initdb-volume
          configMap:
            name: {{ .Release.Name }}-config-files
