#!/bin/bash
source .values
COMMAND=$1
PROFILE=$2

[ ! -f "/usr/local/bin/istioctl" ] && echo "istioctl not found in /usr/local/bin, cannot continue" && exit

kubectl version | grep "Server Version" | grep "linux/arm64" > /dev/null && _Values_server_arch="-arm64"
_Values_host_name=`kubectl get configmaps cluster-config -o jsonpath='{.data.hostname}' -n default` && [ -z "$_Values_host_name" ] && echo "Hostname is empty" && exit

function dynKubectl() {
for filename in $2/*.yaml; do
eval "cat <<EOF
$(<$filename)
EOF
" | kubectl $1 -f -
done
}

function up() {
    dynKubectl apply ./templates
    sleep 5
#    kubectl port-forward deployment/keycloak 8080:8080 -n keycloak
}

function down() {
    dynKubectl "delete --ignore-not-found" ./templates
}


if   [ "${COMMAND}" = "init" ] ; then up;
elif [ "${COMMAND}" = "restart" ] ; then down && up;
elif [ "${COMMAND}" = "down" ]; then down;
elif [ "${COMMAND}" = "prune" ]; then down;

else echo Doing nothing !; fi