#!/bin/bash
source .values
COMMAND=$1
PROFILE=$2

kubectl version --output=json | grep "linux/arm64" > /dev/null && _Values_server_arch="-arm64v8"
_Values_host_name=`kubectl get configmaps cluster-config -o jsonpath='{.data.hostname}' -n default` && [ -z "$_Values_host_name" ] && echo "Hostname is empty" && exit


function dynKubectl() {
for filename in $2/*.yml; do
eval "cat <<EOF
$(<$filename)
EOF
" | kubectl $1 -n ${_Release_namespace} -f -
done
}

function init() {
    linkerd viz install | kubectl apply -f - #&& dynKubectl apply ./templates
}

function prune() {
    linkerd viz uninstall | kubectl delete -f - #&& dynKubectl "delete --ignore-not-found" ./templates
}

[ ! -f "/usr/local/bin/linkerd" ] && echo "linkerd not found in /usr/local/bin, cannot continue" && exit

if   [ "${COMMAND}" = "init" ] ; then init;
elif [ "${COMMAND}" = "prune" ]; then prune;

else echo Doing nothing !; fi