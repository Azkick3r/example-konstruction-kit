#!/bin/bash
COMMAND=$1
PROFILE=$2

[ ! -f "/usr/local/bin/helm" ] && echo "helm not found in /usr/local/bin, cannot continue" && exit

kubectl version | grep "Server Version" | grep "linux/arm64" > /dev/null && _Values_server_arch="-arm64v8"
_Values_host_name=`kubectl get configmaps cluster-config -o jsonpath='{.data.hostname}' -n default` && [ -z "$_Values_host_name" ] && echo "Hostname is empty" && exit

function up() {
    #helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/

    helm install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard --namespace kubernetes-dashboard --version 5.0.4 \
    -f ./values.yaml --set ingress.hosts[0]=$_Values_host_name,ingress.tls[0].hosts[0]=$_Values_host_name
}

function down() {
    helm uninstall kubernetes-dashboard --namespace=kubernetes-dashboard
}

function proxy() {
  open http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:https/proxy/ && kubectl proxy
}


if   [ "${COMMAND}" = "init" ] ; then up;
elif [ "${COMMAND}" = "restart" ] ; then down && up;
elif [ "${COMMAND}" = "prune" ]; then down;
elif [ "${COMMAND}" = "proxy" ]; then proxy;

else echo Doing nothing !; fi

#Sample query: {namespace="example-tenant-5a2f",container="callee-service-application"}
