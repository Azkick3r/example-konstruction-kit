#!/bin/bash
COMMAND=$1

function up() {
    helm install \
    --set image.arch=`kubectl version | grep "Server Version" | grep "linux/arm64" > /dev/null && echo "-arm64v8"` \
    --set ingress.hosts=`kubectl get configmaps cluster-config -o jsonpath='{.data.hostname}' -n default` \
    --namespace `cat ./values.yaml | grep "namespace" | cut -d':' -f2 | xargs` \
    `cat ./Chart.yaml | grep "name" | cut -d':' -f2 | xargs` ./
}

function down() {
    helm uninstall \
    --namespace `cat ./values.yaml | grep "namespace" | cut -d':' -f2 | xargs` \
    `cat ./Chart.yaml | grep "name" | cut -d':' -f2 | xargs`
}

function proxy() {
    kubectl port-forward deployment/`cat ./Chart.yaml | grep "name" | cut -d':' -f2 | xargs` \
    `cat ./values.yaml | grep "port" | cut -d':' -f2 | xargs`:`cat ./values.yaml | grep "port" | cut -d':' -f2 | xargs` \
    -n `cat ./values.yaml | grep "namespace" | cut -d':' -f2 | xargs`
}

if   [ "${COMMAND}" = "up" ]; then up;
elif [ "${COMMAND}" = "down" ]; then down;
elif [ "${COMMAND}" = "restart" ]; then down && up;
elif [ "${COMMAND}" = "lint" ]; then helm lint ./;
elif [ "${COMMAND}" = "proxy" ]; then proxy;

else echo Doing nothing !; fi