apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "application.fullname" . }}
  labels:
    {{- include "application.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "application.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "application.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
        {{- end }}

      {{ if .Values.image.pullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: s3
              containerPort: 9000
              protocol: TCP
            - name: http
              containerPort: 9001
              protocol: TCP

          envFrom:
            - configMapRef:
                name: {{ include "application.fullname" . }}-config
#            - secretRef:
#                name: {{ include "application.fullname" . }}-secret

          args: ["server", "/data", "--console-address", ":9001"]
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"

          volumeMounts:
            - mountPath: /data
              name: {{ include "application.fullname" . }}-volume

      volumes:
        - name: {{ include "application.fullname" . }}-volume
          persistentVolumeClaim:
            claimName: {{ include "application.fullname" . }}-pvc